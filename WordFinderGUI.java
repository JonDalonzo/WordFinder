/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wordfinder;

import java.io.*;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;

/**
 *
 * @author e356227
 */
public class WordFinderGUI extends javax.swing.JFrame {
    
    //        "C:\\Users\\e356227\\Desktop\\File to search in.txt"
    //        "C:\\Users\\e356227\\Desktop\\words to search for.txt"
    String[] words; // words to search for
    String[] file; // file to search in
    DefaultListModel<String> listModel1;
    DefaultListModel<String> listModel2;
    
    public WordFinderGUI() {
        initComponents();
        listModel1 = new DefaultListModel<String>();
        listModel2 = new DefaultListModel<String>();
        fileList1.setListData(new String[0]);
        fileList2.setListData(new String[0]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        fileChooser1 = new javax.swing.JFileChooser();
        fileChooser2 = new javax.swing.JFileChooser();
        browseButton1 = new javax.swing.JButton();
        browseButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SearchOccurrences = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        fileList2 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        fileList1 = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        fileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\e"));
        fileChooser1.setDialogTitle("This is my open dialog ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        browseButton1.setText("Browse");
        browseButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browseButton1MouseClicked(evt);
            }
        });

        browseButton2.setText("Browse");
        browseButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browseButton2MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Files to search in:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Files of terms to search for:");

        SearchOccurrences.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        SearchOccurrences.setText("Find Occurrences");
        SearchOccurrences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchOccurrencesActionPerformed(evt);
            }
        });

        fileList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(fileList2);

        fileList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(fileList1);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(browseButton1))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SearchOccurrences, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(browseButton2)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(browseButton1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(browseButton2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(SearchOccurrences, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>                        

    private void SearchOccurrencesActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        System.out.println("Finding all occurrences...");
        file = readInFile(listModel1.get(0));
        words = readInFile(listModel2.get(0));
        String results = findFormattedResults(findOccurrences(words, file), words);
//        createFileOfResults(results);
        System.out.println(results);
        System.out.println("Done.");
    }                                                 

    private void browseButton1MouseClicked(java.awt.event.MouseEvent evt) {                                           
        int returnVal = fileChooser1.showDialog(this, "Add");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser1.getSelectedFile();    
            listModel1.addElement(file.getPath());
            fileList1.setModel(listModel1);
        } else {
            System.out.println("File access cancelled by user.");
        }
    }                                          

    private void browseButton2MouseClicked(java.awt.event.MouseEvent evt) {                                           
        int returnVal = fileChooser2.showDialog(this, "Add");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser2.getSelectedFile();
            // What to do with the file, e.g. display it in a TextArea
            listModel2.addElement(file.getPath());
            fileList2.setModel(listModel2);
        } else {
            System.out.println("File access cancelled by user.");
        }
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new WordFinderGUI().setVisible(true);
            }
        });
    }
    
    public void createFileOfResults(String results) {
        try (Writer writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream("ResultFile.txt"), "utf-8"))) {
            writer.write(results);
        } catch ( Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    public static String findFormattedResults(String[] occurrences, String[] words) {
        String results = "";
        
        for (int i = 0; i < words.length; i++) {
            if (occurrences[i] != null) {
                results += words[i] + " is found at line(s) " + occurrences[i] + "\n";        
            }
        }
        return results;
    }
    
    public static String[] findOccurrences(String[] words, String[] fileLines) {
        String[] ocurrences = new String[words.length];
        
        for (int i = 0; i < words.length; i++) {
            
            for (int j = 0; j < fileLines.length; j++) {
                if (fileLines[j].contains(words[i])) {
                    if (ocurrences[i] != null) {
                        ocurrences[i] += j + "  ";
                    }
                    else {
                        ocurrences[i] = j + "  ";
                    }
                }
            }
        }
        
        
        return ocurrences;
    }
    
    public static String[] readInFile(String filePath) {
        String file = "";
        
        try {
            FileReader fr = new FileReader(filePath);
            BufferedReader textReader = new BufferedReader(fr);
            
            String nextLine = "START OF FILE";
            do {
                file += nextLine + "\n";
                nextLine = textReader.readLine();
            } while (nextLine != null);
            
            
            fr.close();
            textReader.close();
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return file.trim().split("\n");
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton SearchOccurrences;
    private javax.swing.JButton browseButton1;
    private javax.swing.JButton browseButton2;
    private javax.swing.JFileChooser fileChooser1;
    private javax.swing.JFileChooser fileChooser2;
    private javax.swing.JList fileList1;
    private javax.swing.JList fileList2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration                   
}
